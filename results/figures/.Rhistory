expression(italic("S. cerevisiae")),
expression(italic("C. elegans")),
expression(italic("D. melanogaster")),
expression(italic("A. thaliana")),
expression(italic("M. musculus"))
)
))
# Define a custom theme
my_theme <- theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 12, face = "bold"))
# Visualization 1
# Corrected significance_hk
significance_hk <- tibble(
Organism = factor(
c("ecoli", "celegans", "fruitfly", "mouse", "yeast", "arabidopsis"),
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = c(
"italic('E. coli')",
"italic('S. cerevisiae')",
"italic('C. elegans')",
"italic('D. melanogaster')",
"italic('A. thaliana')",
"italic('M. musculus')"
)
),
x = c(1.5, 1.5, 1.5, 1.5, 1.5, 1.5),  # X coordinates for label placement
y = c(900, 900, 900, 900, 900, 900),  # Y coordinates for label placement
label = c("***", "***", "***", "***", "***", "***")  # Significance levels for each organism
)
HkPolyx <- HkPolyx %>%
mutate(Organism = factor(Organism,
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = list(
expression(italic("E. coli")),
expression(italic("S. cerevisiae")),
expression(italic("C. elegans")),
expression(italic("D. melanogaster")),
expression(italic("A. thaliana")),
expression(italic("M. musculus"))
)
))
# Define a custom theme
my_theme <- theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 12, face = "bold"))
HkPolyx %>%
ggplot(aes(x = Hk, y = Length, fill = Hk)) +
geom_boxplot(size = 1.2, notch = TRUE) +
#geom_jitter(width = 0.2, alpha = 0.5, size = 0.01) +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(100, 900)) +
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 3, labeller = label_parsed) +  # Facet by organism
my_theme +
geom_text(data = significance_hk, aes(x = x, y = y, label = label), size = 4, color = "black", inherit.aes = FALSE) +
geom_text(
data = HkPolyx %>%
group_by(Hk, Organism) %>%
summarize(median_length = median(Length),
Count = n()),
aes(x = Hk,
y = median_length - 50,  # Place the text at the median
label = Count),
inherit.aes = FALSE,
size = 3, color = "black")
# Read in data for all organisms
file_paths <- list.files(here("results", "tables", "mapped_hk_polyx"),
pattern = "*.tsv", full.names = TRUE)
organism_data <- file_paths %>%
map_dfr(~read_tsv(.x, show_col_types = FALSE) %>%
mutate(
Polyx_lengths = as.character(Polyx_lengths),  # Ensure consistent type for Polyx_lengths
Count_grouped = as.character(Count_grouped),  # Ensure consistent type for Count_grouped
Organism = str_remove(tools::file_path_sans_ext(basename(.x)), "_mapped_polyx")  # Remove suffix
))
# Process the combined data
HkPolyx <- organism_data %>%
mutate(Hk = recode(Hk, `0` = "not Hk", `1` = "Hk"),
Hk = as.factor(Hk),
Hk = factor(Hk, levels = rev(levels(Hk))),
Count_grouped = factor(Count_grouped, levels = c("0", "1", ">1")))
HkPolyx$Organism <- factor(HkPolyx$Organism, levels = c("ecoli", "yeast", "arabidopsis", "celegans", "fruitfly", "mouse"))
HkPolyx <- HkPolyx %>%
HkPolyx <- HkPolyx %>%
mutate(Organism = factor(Organism,
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = c("E. coli", "S. cerevisiae", "C. elegans", "D. melanogaster", "A. thaliana", "M. musculus")
))
HkPolyx <- HkPolyx %>%
HkPolyx <- HkPolyx %>%
mutate(Organism = factor(Organism,
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = c("E. coli", "S. cerevisiae", "C. elegans", "D. melanogaster", "A. thaliana", "M. musculus")
))
HkPolyx <- HkPolyx %>%
mutate(Organism = factor(Organism,
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = c("E. coli", "S. cerevisiae", "C. elegans", "D. melanogaster", "A. thaliana", "M. musculus")
))
# Define a custom theme
my_theme <- theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 12, face = "bold"))
HkPolyx %>%
ggplot(aes(x = Hk, y = Length, fill = Hk)) +
geom_boxplot(size = 1.2, notch = TRUE) +
#geom_jitter(width = 0.2, alpha = 0.5, size = 0.01) +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(100, 900)) +
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 3, labeller = label_parsed) +  # Facet by organism
my_theme +
geom_text(data = significance_hk, aes(x = x, y = y, label = label), size = 4, color = "black", inherit.aes = FALSE) +
geom_text(
data = HkPolyx %>%
group_by(Hk, Organism) %>%
summarize(median_length = median(Length),
Count = n()),
aes(x = Hk,
y = median_length - 50,  # Place the text at the median
label = Count),
inherit.aes = FALSE,
size = 3, color = "black")
# Visualization 1
# Corrected significance_hk
significance_hk <- tibble(
Organism = factor(
c("ecoli", "celegans", "fruitfly", "mouse", "yeast", "arabidopsis"),
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = c("E. coli", "S. cerevisiae", "C. elegans", "D. melanogaster", "A. thaliana", "M. musculus")
),
x = c(1.5, 1.5, 1.5, 1.5, 1.5, 1.5),  # X coordinates for label placement
y = c(900, 900, 900, 900, 900, 900),  # Y coordinates for label placement
label = c("***", "***", "***", "***", "***", "***")  # Significance levels for each organism
)
HkPolyx %>%
ggplot(aes(x = Hk, y = Length, fill = Hk)) +
geom_boxplot(size = 1.2, notch = TRUE) +
#geom_jitter(width = 0.2, alpha = 0.5, size = 0.01) +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(100, 900)) +
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 3, labeller = label_parsed) +  # Facet by organism
my_theme +
geom_text(data = significance_hk, aes(x = x, y = y, label = label), size = 4, color = "black", inherit.aes = FALSE) +
geom_text(
data = HkPolyx %>%
group_by(Hk, Organism) %>%
summarize(median_length = median(Length),
Count = n()),
aes(x = Hk,
y = median_length - 50,  # Place the text at the median
label = Count),
inherit.aes = FALSE,
size = 3, color = "black")
library(tidyverse)
library(readxl)
library(dplyr)
library(gridExtra)
library(here)
# Custom theme definition (no changes needed here)
my_theme <- theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 12, face = "bold"))
# Corrected significance_hk
significance_hk <- tibble(
Organism = factor(
c("ecoli", "celegans", "fruitfly", "mouse", "yeast", "arabidopsis"),
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = c("E. coli", "S. cerevisiae", "C. elegans", "D. melanogaster", "A. thaliana", "M. musculus")
),
x = c(1.5, 1.5, 1.5, 1.5, 1.5, 1.5),  # X coordinates for label placement
y = c(900, 900, 900, 900, 900, 900),  # Y coordinates for label placement
label = c("***", "***", "***", "***", "***", "***")  # Significance levels for each organism
)
# Main Plot
HkPolyx %>%
ggplot(aes(x = Hk, y = Length, fill = Hk)) +
geom_boxplot(size = 1.2, notch = TRUE) +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(100, 900)) +
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 3, labeller = labeller(Organism = c(
"E. coli" = expression(italic("E. coli")),
"S. cerevisiae" = expression(italic("S. cerevisiae")),
"C. elegans" = expression(italic("C. elegans")),
"D. melanogaster" = expression(italic("D. melanogaster")),
"A. thaliana" = expression(italic("A. thaliana")),
"M. musculus" = expression(italic("M. musculus"))
))) +  # Use labeller to apply italicized organism names
my_theme +
geom_text(data = significance_hk, aes(x = x, y = y, label = label), size = 4, color = "black", inherit.aes = FALSE) +
geom_text(
data = HkPolyx %>%
group_by(Hk, Organism) %>%
summarize(median_length = median(Length),
Count = n()),
aes(x = Hk,
y = median_length - 50,  # Place the text at the median
label = Count),
inherit.aes = FALSE,
size = 3, color = "black")
significance_labels <- tibble(
Organism = c("ecoli", "celegans", "fruitfly", "mouse", "yeast", "arabidopsis", "celegans", "fruitfly", "mouse", "yeast", "arabidopsis"),  # Replace with actual organism names
x = c(1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 2.5, 2.5, 2.5, 2.5, 2.5),  # X coordinates for label placement
y = c(1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350),  # Y coordinates for label placement
label = c("ns", "***", "***", "***", "***", "***", "***", "***", "***", "***", "***")  # Significance levels for each organism
)
# Custom theme definition (no changes needed here)
my_theme <- theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 12, face = "bold"))
# Corrected significance_hk
significance_hk <- tibble(
Organism = factor(
c("ecoli", "celegans", "fruitfly", "mouse", "yeast", "arabidopsis"),
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = c("E. coli", "S. cerevisiae", "C. elegans", "D. melanogaster", "A. thaliana", "M. musculus")
),
x = c(1.5, 1.5, 1.5, 1.5, 1.5, 1.5),  # X coordinates for label placement
y = c(900, 900, 900, 900, 900, 900),  # Y coordinates for label placement
label = c("***", "***", "***", "***", "***", "***")  # Significance levels for each organism
)
# Main Plot
HkPolyx %>%
ggplot(aes(x = Hk, y = Length, fill = Hk)) +
geom_boxplot(size = 1.2, notch = TRUE) +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(100, 900)) +
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 3, labeller = labeller(Organism = c(
"E. coli" = expression(italic("E. coli")),
"S. cerevisiae" = expression(italic("S. cerevisiae")),
"C. elegans" = expression(italic("C. elegans")),
"D. melanogaster" = expression(italic("D. melanogaster")),
"A. thaliana" = expression(italic("A. thaliana")),
"M. musculus" = expression(italic("M. musculus"))
))) +  # Use labeller to apply italicized organism names
my_theme +
geom_text(data = significance_hk, aes(x = x, y = y, label = label), size = 4, color = "black", inherit.aes = FALSE) +
geom_text(
data = HkPolyx %>%
group_by(Hk, Organism) %>%
summarize(median_length = median(Length),
Count = n()),
aes(x = Hk,
y = median_length - 50,  # Place the text at the median
label = Count),
inherit.aes = FALSE,
size = 3, color = "black")
# Read in data for all organisms
file_paths <- list.files(here("results", "tables", "mapped_hk_polyx"),
pattern = "*.tsv", full.names = TRUE)
organism_data <- file_paths %>%
map_dfr(~read_tsv(.x, show_col_types = FALSE) %>%
mutate(
Polyx_lengths = as.character(Polyx_lengths),  # Ensure consistent type for Polyx_lengths
Count_grouped = as.character(Count_grouped),  # Ensure consistent type for Count_grouped
Organism = str_remove(tools::file_path_sans_ext(basename(.x)), "_mapped_polyx")  # Remove suffix
))
# Process the combined data
HkPolyx <- organism_data %>%
mutate(Hk = recode(Hk, 0 = "not Hk", 1 = "Hk"),
# Read in data for all organisms
file_paths <- list.files(here("results", "tables", "mapped_hk_polyx"),
pattern = "*.tsv", full.names = TRUE)
organism_data <- file_paths %>%
map_dfr(~read_tsv(.x, show_col_types = FALSE) %>%
mutate(
Polyx_lengths = as.character(Polyx_lengths),  # Ensure consistent type for Polyx_lengths
Count_grouped = as.character(Count_grouped),  # Ensure consistent type for Count_grouped
Organism = str_remove(tools::file_path_sans_ext(basename(.x)), "_mapped_polyx")  # Remove suffix
))
# Process the combined data
HkPolyx <- organism_data %>%
mutate(Hk = recode(Hk, 0 = "not Hk", 1 = "Hk"),
# Read in data for all organisms
file_paths <- list.files(here("results", "tables", "mapped_hk_polyx"),
pattern = "*.tsv", full.names = TRUE)
organism_data <- file_paths %>%
map_dfr(~read_tsv(.x, show_col_types = FALSE) %>%
mutate(
Polyx_lengths = as.character(Polyx_lengths),  # Ensure consistent type for Polyx_lengths
Count_grouped = as.character(Count_grouped),  # Ensure consistent type for Count_grouped
Organism = str_remove(tools::file_path_sans_ext(basename(.x)), "_mapped_polyx")  # Remove suffix
))
# Process the combined data
HkPolyx <- organism_data %>%
mutate(Hk = recode(Hk, `0` = "not Hk", `1` = "Hk"),
Hk = as.factor(Hk),
Hk = factor(Hk, levels = rev(levels(Hk))),
Count_grouped = factor(Count_grouped, levels = c("0", "1", ">1")))
HkPolyx$Organism <- factor(HkPolyx$Organism, levels = c("ecoli", "yeast", "arabidopsis", "celegans", "fruitfly", "mouse"))
HkPolyx <- HkPolyx %>%
mutate(Organism = factor(Organism,
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = c("E. coli", "S. cerevisiae", "C. elegans", "D. melanogaster", "A. thaliana", "M. musculus")
))
# Visualization 1
significance_hk <- tibble(
Organism = factor(
c("ecoli", "celegans", "fruitfly", "mouse", "yeast", "arabidopsis"),
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = c("E. coli", "S. cerevisiae", "C. elegans", "D. melanogaster", "A. thaliana", "M. musculus")
),
x = c(1.5, 1.5, 1.5, 1.5, 1.5, 1.5),  # X coordinates for label placement
y = c(900, 900, 900, 900, 900, 900),  # Y coordinates for label placement
label = c("***", "***", "***", "***", "***", "***")  # Significance levels for each organism
)
# Read in data for all organisms
file_paths <- list.files(here("results", "tables", "mapped_hk_polyx"),
pattern = "*.tsv", full.names = TRUE)
organism_data <- file_paths %>%
map_dfr(~read_tsv(.x, show_col_types = FALSE) %>%
mutate(
Polyx_lengths = as.character(Polyx_lengths),  # Ensure consistent type for Polyx_lengths
Count_grouped = as.character(Count_grouped),  # Ensure consistent type for Count_grouped
Organism = str_remove(tools::file_path_sans_ext(basename(.x)), "_mapped_polyx")  # Remove suffix
))
# Process the combined data
HkPolyx <- organism_data %>%
mutate(Hk = recode(Hk, `0` = "not Hk", `1` = "Hk"),
Hk = as.factor(Hk),
Hk = factor(Hk, levels = rev(levels(Hk))),
Count_grouped = factor(Count_grouped, levels = c("0", "1", ">1")))
HkPolyx$Organism <- factor(HkPolyx$Organism, levels = c("ecoli", "yeast", "arabidopsis", "celegans", "fruitfly", "mouse"))
HkPolyx <- HkPolyx %>%
mutate(Organism = factor(Organism,
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = c("E. coli", "S. cerevisiae", "C. elegans", "D. melanogaster", "A. thaliana", "M. musculus")
))
# Define a custom theme
my_theme <- theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 15),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 12, face = "bold"))
# Visualization 1
significance_hk <- tibble(
Organism = factor(
c("ecoli", "celegans", "fruitfly", "mouse", "yeast", "arabidopsis"),
levels = c("ecoli", "yeast", "celegans", "fruitfly", "arabidopsis", "mouse"),
labels = c("E. coli", "S. cerevisiae", "C. elegans", "D. melanogaster", "A. thaliana", "M. musculus")
),
x = c(1.5, 1.5, 1.5, 1.5, 1.5, 1.5),  # X coordinates for label placement
y = c(900, 900, 900, 900, 900, 900),  # Y coordinates for label placement
label = c("***", "***", "***", "***", "***", "***")  # Significance levels for each organism
)
HkPolyx %>%
ggplot(aes(x = Hk, y = Length, fill = Hk)) +
geom_boxplot(size = 1.2, notch = TRUE) +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(100, 900)) +
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 3, labeller = labeller(Organism = c(
"E. coli" = expression(italic("E. coli")),
"S. cerevisiae" = expression(italic("S. cerevisiae")),
"C. elegans" = expression(italic("C. elegans")),
"D. melanogaster" = expression(italic("D. melanogaster")),
"A. thaliana" = expression(italic("A. thaliana")),
"M. musculus" = expression(italic("M. musculus"))
))) +  # Use labeller to apply italicized organism names
my_theme +
geom_text(data = significance_hk, aes(x = x, y = y, label = label), size = 4, color = "black", inherit.aes = FALSE) +
geom_text(
data = HkPolyx %>%
group_by(Hk, Organism) %>%
summarize(median_length = median(Length),
Count = n()),
aes(x = Hk,
y = median_length - 50,  # Place the text at the median
label = Count),
inherit.aes = FALSE,
size = 3, color = "black")
HkPolyx %>%
ggplot(aes(x = Hk, y = Length, fill = Hk)) +
geom_boxplot(size = 1.2, notch = TRUE) +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(100, 900)) +
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 3, labeller = labeller(Organism = c(
"E. coli" = expression(italic("E. coli")),
"S. cerevisiae" = expression(italic("S. cerevisiae")),
"C. elegans" = expression(italic("C. elegans")),
"D. melanogaster" = expression(italic("D. melanogaster")),
"A. thaliana" = expression(italic("A. thaliana")),
"M. musculus" = expression(italic("M. musculus"))
)), parse = TRUE) +  # Use labeller to apply italicized organism names
my_theme +
geom_text(data = significance_hk, aes(x = x, y = y, label = label), size = 4, color = "black", inherit.aes = FALSE) +
geom_text(
data = HkPolyx %>%
group_by(Hk, Organism) %>%
summarize(median_length = median(Length),
Count = n()),
aes(x = Hk,
y = median_length - 50,  # Place the text at the median
label = Count),
inherit.aes = FALSE,
size = 3, color = "black")
# version 2
# Main Plot with corrected italics using label_parsed
HkPolyx %>%
ggplot(aes(x = Hk, y = Length, fill = Hk)) +
geom_boxplot(size = 1.2, notch = TRUE) +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(100, 900)) +
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 3, labeller = label_parsed) +  # Apply label_parsed for expression formatting
my_theme +
geom_text(data = significance_hk, aes(x = x, y = y, label = label), size = 4, color = "black", inherit.aes = FALSE) +
geom_text(
data = HkPolyx %>%
group_by(Hk, Organism) %>%
summarize(median_length = median(Length),
Count = n()),
aes(x = Hk,
y = median_length - 50,  # Place the text at the median
label = Count),
inherit.aes = FALSE,
size = 3, color = "black")
# version 2
# Main Plot with corrected italics using label_parsed
# Main Plot with corrected italics using label_parsed
HkPolyx %>%
ggplot(aes(x = Hk, y = Length, fill = Hk)) +
geom_boxplot(size = 1.2, notch = TRUE) +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(100, 900)) +
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 3,
labeller = labeller(Organism = c(
"E. coli" = expression(italic("E. coli")),
"S. cerevisiae" = expression(italic("S. cerevisiae")),
"C. elegans" = expression(italic("C. elegans")),
"D. melanogaster" = expression(italic("D. melanogaster")),
"A. thaliana" = expression(italic("A. thaliana")),
"M. musculus" = expression(italic("M. musculus"))
))) +  # Manually set expressions for facet labels
my_theme +
geom_text(data = significance_hk, aes(x = x, y = y, label = label), size = 4, color = "black", inherit.aes = FALSE) +
geom_text(
data = HkPolyx %>%
group_by(Hk, Organism) %>%
summarize(median_length = median(Length),
Count = n()),
aes(x = Hk,
y = median_length - 50,  # Place the text at the median
label = Count),
inherit.aes = FALSE,
size = 3, color = "black")
HkPolyx %>%
ggplot(aes(x = Hk, y = Length, fill = Hk)) +
geom_boxplot(size = 1.2, notch = TRUE) +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(100, 900)) +
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 3, labeller = labeller(Organism = c(
"E. coli" = expression(italic("E. coli")),
"S. cerevisiae" = expression(italic("S. cerevisiae")),
"C. elegans" = expression(italic("C. elegans")),
"D. melanogaster" = expression(italic("D. melanogaster")),
"A. thaliana" = expression(italic("A. thaliana")),
"M. musculus" = expression(italic("M. musculus"))
))) +  # Use labeller to apply italicized organism names
my_theme +
geom_text(data = significance_hk, aes(x = x, y = y, label = label), size = 4, color = "black", inherit.aes = FALSE) +
geom_text(
data = HkPolyx %>%
group_by(Hk, Organism) %>%
summarize(median_length = median(Length),
Count = n()),
aes(x = Hk,
y = median_length - 50,  # Place the text at the median
label = Count),
inherit.aes = FALSE,
size = 3, color = "black") +
theme(strip.text = element_text(face = "italic"))
install.packages("officer")
